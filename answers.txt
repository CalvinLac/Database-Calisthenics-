
1) To find all the users that are located in California

User.find_by_sql ["SELECT * FROM users JOIN states on (state_id = statHERE name= 'California';]

2) To find all the airports that are located in the state of Minnesota

Airport.find_by_sql ["SELECT * FROM airports JOIN states ON (state_id = states.id) WHERE name = 'Minnesota';"]

3) SKIPPED 

4) To find the price of all flights that originate from Calgary
Flight.find_by_sql ["SELECT price FROM flights JOIN airports on (origin_id=airports.id) WHERE code = 'YYC';"]

5) To find all the flights that connect to Calgary airport
Flight.find_by_sql ["SELECT * FROM flights JOIN airports ON (origin_id=state_id) WHERE code = 'YYC';"]

6) Find all the airports that Calvin visted 
User.find_by_sql ["SELECT * FROM users JOIN flights ON (state_id=origin_id) WHERE first_name = 'Calvin';"]

7) To find the most expensive flights that stem from Calgary
Flight.find_by_sql ["SELECT * FROM flights JOIN airports ON (origin_id=state_id) WHERE code = 'YYC' ORDER BY price DESC;"]

8) To find the shortest flight that 'Calvin' took
Flight.find_by_sql ["SELECT distance, first_name FROM flights JOIN users ON (origin_id=state_id) WHERE first_name = 'Calvin';"]

9 To find the average flight distance of planes that come and go from YYC airport
Flight.find_by_sql ["SELECT AVG(distance) FROM flights JOIN airports ON (origin_id=state_id) WHERE code= 'GMO';"]

10) To find the top 3 users that have spent the most money on flights
User.find_by_sql ["Select username, sum(price) From users JOIN itineraries ON (users.id=user_id) JOIN tickets ON (itineraries.id=itinerary_id) JOIN flights ON (flight_id=flights.id) GROUP BY username;"]

11) To find the maximum range of flights
Flight.find_by_sql ["SELECT max(distance), min(distance) FROM flights;"]

12) To find the most popular travel destination
User.find_by_sql ["SELECT username, states.name FROM users JOIN itineraries ON (users.id=user_id) JOIN tickets ON (itineraries.id=itinerary_id) JOIN flights ON (flight_id=flights.id) JOIN states ON (destination_id=states.id) WHERE users.state_id = '51';"]

13) Subqueries
User.find_by_sql ["SELECT * FROM users WHERE id IN (SELECT flights.id FROM flights WHERE origin_id =150);"]

Kansas query
State.find_by_sql ["SELECT name count(name) FROM states where id IN (SELECT state_id FROM airports WHERE id IN (SELECT destination_id FROM flights WHERE origin_id IN (SELECT id FROM airports WHERE state_id = (SELECT id FROM states WHERE name = 'Kansas')))) group by name;"]

Find the person who has spent the most on a single flight that only has 1 itinerary
User.find_by_sql ["SELECT username, flights.price FROM users JOIN itineraries ON users.id = itineraries.user_id JOIN tickets ON itineraries.id = tickets.itinerary_id JOIN flights ON tickets.flight_id = flights.id where users.id in (SELECT user_id FROM itineraries group by user_id) order by flights.price desc"]

To find the average cost of a flight for users in a specific state(Not sure the syntax for the date)
State.find_by_sql ["SELECT states.name, avg(flights.price) FROM states JOIN users ON (states.id=users.state_id) JOIN itineraries ON (users.id=itineraries.user_id) JOIN tickets ON (itineraries.id=tickets.itinerary_id) JOIN flights ON (tickets.flight_id=flights.id) GROUP BY states.name"]
